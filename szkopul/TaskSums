#include <bits/stdc++.h>
#include <queue> 

using namespace std;
typedef pair<int, int> pi; 
int dp [50001];
int nums [5001];
int a;
int max1 = 1000000001;


int main()
{
	priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;
	cin >> a;
	fill(dp, dp + 50001, max1);

	for(int x = 0;x<a;x++)
	scanf("%d",&nums[x]);
	q.push(pi(0,0));
	while(!q.empty())
	{
	    pair<int, int> t = q.top(); 
		q.pop();
		int value = t.first;
		int node = t.second;
		if(dp[node] >= value)
		{
			dp[node] = value;
			for(int x = 1;x<a;x++)
			{
				int temp1 =( node+nums[x]) % nums[0];
				int temp2 = value + nums[x];
				if(dp[temp1]>temp2&&  temp2 < max1)
				{
					dp[temp1] = temp2;
					q.push(pi(temp2,temp1));
				}
			}
		}
	}
	int b;
	cin >> b;
	for(int x = 0;x<b;x++)
	{
		int c;
		scanf("%d",&c);
		if(dp[c % nums[0]] <= c)
			puts("TAK");
		else
			puts("NIE");
		
	}
	cout << endl;
	
}
