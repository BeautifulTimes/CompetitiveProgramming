#include <bits/stdc++.h>
#include <queue> 

using namespace std;
    queue <int> q; 

int dp [50001];
int nums [5001];
int a;
int max1 = 1000000001;
void dfs(int node, int value)
{
	if(value > max1)
		return;	
	if(dp[node] <= value)
		return;
	dp[node] = value;
	for(int x = 1;x<a;x++)
	{
		if(dp[(node+nums[x]) % nums[0]] > value + nums[x])
		{
		
			q.push((node+nums[x]) % nums[0]);
			q.push(value + nums[x]);
		}
	}
}
int main()
{
	cin >> a;
	for(int x = 0;x<50001;x++)
		dp[x] = max1;

	for(int x = 0;x<a;x++)
		cin >> nums[x];
	dfs(0,0);
	q.push(0);
	q.push(0);
	while(q.size() != 0)
	{
		int f = q.front();
		q.pop();
		dfs(f,q.front());
		q.pop();
		}
	int b;
	cin >> b;

	for(int x = 0;x<b;x++)
	{
		int c;
		cin >> c;
		if(dp[c % nums[0]] <= c)
			cout << "TAK";
		else
			cout << "NIE";
		cout << '\n';
	}
	cout << endl;
	
}
